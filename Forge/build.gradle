allprojects {
    apply plugin: 'java'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.release = 17
    }
}

subprojects {
    java.withSourcesJar()

    jar {
        from(rootProject.file("LICENSE"))
        from(rootProject.file("README.md"))
        from(rootProject.file('files/changelog.txt'))
        manifest {
            attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : project.jar.archiveVersion,
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestamp'              : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Build-On-Minecraft'      : minecraft_version
            ])
        }
    }

    sourcesJar {
        from(rootProject.file("LICENSE"))
        from(rootProject.file("README.md"))
        from(rootProject.file('files/changelog.txt'))
    }

    repositories {
        mavenCentral()

        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }

        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org/'
        }

        maven {
            name = "TerraformersMC"
            url = "https://maven.terraformersmc.com/"
        }

        maven {
            name = "Curse Maven"
            url = "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }

        maven {
            name = "C4's Maven"
            url = "https://maven.theillusivec4.top/"
        }

        maven {
            url "file://${project.localmaven}"
        }
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {
        it.enabled = false
    }

    tasks.withType(Jar).all {
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
    }
}

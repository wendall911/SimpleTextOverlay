plugins {
    id 'multiloader-loader'
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'net.darkhax.curseforgegradle' version '1.+'
    id 'com.modrinth.minotaur' version '2.+'
}

version = fabric_mod_version
archivesBaseName = "${mod_id}"

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings(loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_mc_version}:${parchment_version}@zip")
    })

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    modImplementation "com.illusivesoulworks.spectrelib:spectrelib-fabric:${spectrelib_version}+${minecraft_version}"
    include "com.illusivesoulworks.spectrelib:spectrelib-fabric:${spectrelib_version}+${minecraft_version}"

    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cardinal_components_version}"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cardinal_components_version}"
    include "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cardinal_components_version}"
    include "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cardinal_components_version}"

    modRuntimeOnly("com.terraformersmc:modmenu:${mod_menu_version}") {
        transitive = false
    }
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'

    // Not available for 1.20.4 :(
    //modCompileOnly "curse.maven:fabric_seasons-413523:${fabric_seasons_version}"
    modImplementation "curse.maven:sereneseasons-291874:${serene_seasons_fabric_version}"
    modImplementation "curse.maven:glitchcore-955399:${glitch_core_fabric_version}"
    modRuntimeOnly "net.jodah:typetools:0.6.3"
    modImplementation "com.electronwill.night-config:core:3.6.7"

    include group: 'com.illusivesoulworks.spectrelib', name: 'spectrelib-fabric', version: "${spectrelib_version}+${minecraft_version}"
}

loom {
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

def changelogFile = project(":").projectDir.toString() + '/build/libs/changelog.txt'

task curseforge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    if (project.hasProperty('stocurseApiKey')) {
        apiToken = project.stocurseApiKey
        def mainFile = upload(project.stocurseId, file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"))
        mainFile.changelog = file(changelogFile)
        mainFile.addJavaVersion("Java ${java_version}")
        mainFile.addModLoader('Fabric')
        mainFile.releaseType = "${release_type}"
        "${release_versions}".split(',').each {
            mainFile.addGameVersion("${it}")
        }
        mainFile.addRequirement('fabric-api')
        mainFile.addOptional('fabric-seasons')
        mainFile.addOptional('serene-seasons')
    }
}

modrinth {
    if (project.hasProperty('stoModrinthId')) {
        token = project.modrinthKey
        projectId = project.stoModrinthId
        version = getVersion()
        versionType = "${release_type}"
        if (file(changelogFile).exists()) {
            changelog = file(changelogFile).text
        }
        uploadFile = file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")
        gameVersions = "${release_versions}".split(",") as List<String>
        dependencies {
            required.project 'fabric-api'
            optional.project 'fabric-seasons'
            optional.project 'serene-seasons'
        }
    }
}
